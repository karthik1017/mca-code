a = 10.5
30 + 40
class(a)
as.integer(a)
class(a)
b=as.integer
a = 10.5
30 + 40
class(a)
as.integer(a)
class(a)
b=as.integer(a)
class(b)
class(b)
library("ggplot2", lib.loc="C:/Users/Sudhanva/AppData/Local/conda/conda/envs/r/lib/R/library")
detach("package:ggplot2", unload=TRUE)
x = T
x
X = TRUE
x
x
X
y = F
y
Y
e = 'sup '
e
e = "suppp"
e
print(a)
a
class(a)
f = 10
class(f)
b = as.integer(a)
b
class(b)
clear
class(a)
a = c(1,2,3,4,5)
class(a)
print(a)
a[1,2]
a[1]
a[2]
a[1:3]
a[3:5]
a[-3]
a[-1:-4]
a[c(1,23)]
a[c(1,2,3)]
a[6]
a[6] = 24
c(a[1:2], a[4:5])
sort(a)
a
a=1:100
a
a=seq(1,100,by=2)
a
a=seq(1,100,by=1)
a
a=seq(1,100,by=1.5)
a
a=c(1, 3, seq(5:11, by=2))
a=c(1, 3, seq(5,11, by=2))
a
a=rep(0, 4)
a
a=c()
a
a=c(a, 1)
a
a=c(1, 'r', T)
a
a = [1,2,3,4]
a = (1,2,3,4)
a
a = c(1,2,3,4)
a
a=1:3
b=5:6
b=5:7
a * b
c = 1:10
a * c
d = 1:5
d * c
c = 1:10
d = 1:5
d * c
c = 1:10
c
d
d * c
d[2] * 100
d
d[2] * 100
d
x % y
x %% y
x %/% y
x%%y
x%/%y
a= "hello"
b = "world"
c(a, b)
paste(a, b)
a = factor(c("M", "F", "M", "F", "M"))
a
table(a)
class(a)
a = c("A", "B", "A", "B", "A")
class(a)
a= as.factor(a)
a
levels(a)
a = matrix(1:10, nrow=5)
a
a = matrix(1:10, ncol=5)
a = matrix(0, 3, 3)
a
a[,1]
a[1,]
a = matrix(1:10, nrow=5)
a[,1] # All rows of first
a[1,]
a
a[,1] # All rows of first
a[1,]
a[3, - 1]
a
a * 3
a
mean(a)
mean(a, na.rm=TRUE)
sqrt(729)
b = 1947.0
as.character(b)
v = 1:6
class(v)
v = c(1, '10', T)
class(v)
v = c(1:26)
v
v = as.character(c(1:26))
v
v[1] = "a"
v
names = c("VijayBaba", "ShreedharTwat", "PrateekPleb")
name
names
len(names)
lenght(names)
length(names)
names[1]
names[1:3]
names[1:2]
names[2:3]
names[c(2,3)]
sort(name)
sort(names)
sort(names, rev=TRUE)
sort(names, decreasing=TRUE)
y = seq(1:11)
z = c(x, y)
z
rep("a", 2)
x = rep("a", 2)
y = seq(1:11)
z = c(x, y)
z
num = c(1, 2, NA, 4)
na.omit(num)
num
ran = 1:100
ran
sample(ran, 50)
class(samp)
samp = sample(ran, 50)
class(samp)
a = LETTERS[1:26]
a
a = 1:999999999999999999999999999999999999999999999999999999999
a = 1:999999999999999999999999999999999999
a = 1:999999999999999999999
a = 1:9999999999999
a = 1:9999999
a
a = 1:99999999999
a = 1:999999
a = 1:9999999
a = 1:99999999
a = 1:999999999
a
summary(a)
summary(samp)
2
summary(samp2)
samp2 = sample(ran, 40, replace=TRUE)
summary(samp2)
samp = sample(ran, 50)
summary(samp2)
ran = 1:100
ran
samp = sample(ran, 50)
samp2 = sample(ran, 40, replace=TRUE)
summary(samp2)
dataframe = read.csv('BikeData.csv')
dataframe = read.csv('BikeData.csv')
dataframe = read.csv('BikeData.csv')
dataframe = read.csv('BikeData.csv')
setwd("D:/Code/mca-code/Sem 3/IDS/assignment2")
dataframe = read.csv('BikeData.csv')
dataframe = read.csv('BikeData.csv')
View(dataframe)
daily_cyclists = subset(dataframe, cyc_freq == 'Daily')
View(daily_cyclists)
table(daily_cyclists)
table(daily_cyclists)
table(daily_cyclists$gender)
nrows(daily_cyclists)
nrow(daily_cyclists)
table(daily_cyclists$gender)
daily_cyclists
colMean(daily_cyclists$age)
colMeans(daily_cyclists$age)
dataframe = read.csv('BikeData.csv')
daily_cyclists = subset(dataframe, cyc_freq == 'Daily')
nrow(daily_cyclists)
table(daily_cyclists$gender)
colMeans(daily_cyclists$age)
colMeans(daily_cyclists['age'])
colMeans(subset(daily_cyclists, gender == 'F')
colMeans(subset(daily_cyclists, gender == 'F'))
colMeans(subset(daily_cyclists, gender == 'F'))
# Import dataset
dataframe = read.csv('BikeData.csv')
# Get all the daily cyclists
daily_cyclists = subset(dataframe, cyc_freq == 'Daily')
# Count the number of daily cyclists
nrow(daily_cyclists)
# 47
# Count the number of male and female daily cyclists
table(daily_cyclists$gender)
# M: 38
# F: 9
# Mean age of daily cyclists
colMeans(daily_cyclists['age'])
# Age: 33.65
colMeans(subset(daily_cyclists, gender == 'F'))
colMeans(subset(daily_cyclists, gender == 'F')['age'])
colMeans(subset(daily_cyclists, gender == 'M')['age'])
# Import dataset
dataframe = read.csv('BikeData.csv')
# Get all the daily cyclists
daily_cyclists = subset(dataframe, cyc_freq == 'Daily')
# Count the number of daily cyclists
nrow(daily_cyclists)
# 47
# Count the number of male and female daily cyclists
table(daily_cyclists$gender)
# M: 38
# F: 9
# Mean age of daily cyclists
colMeans(daily_cyclists['age'])
# Age: 33.65
# Mean age of daily female cyclists
colMeans(subset(daily_cyclists, gender == 'F')['age'])
# Mean age of daily male cyclists
colMeans(subset(daily_cyclists, gender == 'M')['age'])
